#include "shell.h"

/**
* _strlen - length of  string
* @str: checkthe length of a string
*
* Return:integer string length
*/
int _strlen(char *str)
{
int len = 0;

if (!str)
return 0;

while (*str++)
len++;
return len;
}

/**
* _strcmp - compares the lexical structures of two strings.
* @s1: first string
* @s2: second string
*
* Return: Zero if s1 == s2, positive if s1 > s2, and negative if s1 s2
*/
int _strcmp(char *s1, char *s2)
{
while (*s1 && *s2)
{
if (*s1 != *s2)
return (*s1 - *s2);
s1++;
s2++;
}
if (*s1 == *s2)
return 0;
else
return (*s1 < *s2 ? -1 : 1);
}

/**
* starts_with -determines if the first needle in the haystack
* @haystack: string to search
* @needle: substring to find
*
* Return: address of the haystack's subsequent character or NULL
*/
char *starts_with(const char *haystack, const char *needle)
{
while (*needle)
{
if (*needle++ != *haystack++)
return NULL;
}
return (char *)haystack;
}

/**
* _strcat - concatenate two strings
* @dest: destination buffer
* @src: source buffer
*
* Return: pointer to destination buffer
*/
char *_strcat(char *dest, char *src)
{
char *ret = dest;

while (*dest)
dest++;
while (*src)
*dest++ = *src++;
*dest = *src;
return ret;
}
